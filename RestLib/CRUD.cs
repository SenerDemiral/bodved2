// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/CRUD.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RestLib {

  /// <summary>Holder for reflection information generated from protos/CRUD.proto</summary>
  public static partial class CRUDReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/CRUD.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CRUDReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFwcm90b3MvQ1JVRC5wcm90bxIHUmVzdExpYiIoCghRcnlQcm94eRINCgVx",
            "dWVyeRgBIAEoCRINCgVwYXJhbRgCIAEoCSKcAQoHQ0NQcm94eRIOCgZSb3dT",
            "dGUYASABKAkSDgoGUm93RXJyGAIgASgJEg4KBlJvd1VzchgDIAEoBBIOCgZS",
            "b3dLZXkYBCABKAQSCgoCQWQYBSABKAkSCwoDU2tsGAYgASgJEgsKA0dycBgH",
            "IAEoCRIMCgRJbmZvGAggASgJEg0KBWlzUnVuGAkgASgIEg4KBmlzUm5rZBgK",
            "IAEoCDJsCgVDUlVEcxIxCgZDQ0ZpbGwSES5SZXN0TGliLlFyeVByb3h5GhAu",
            "UmVzdExpYi5DQ1Byb3h5IgAwARIwCghDQ1VwZGF0ZRIQLlJlc3RMaWIuQ0NQ",
            "cm94eRoQLlJlc3RMaWIuQ0NQcm94eSIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RestLib.QryProxy), global::RestLib.QryProxy.Parser, new[]{ "Query", "Param" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RestLib.CCProxy), global::RestLib.CCProxy.Parser, new[]{ "RowSte", "RowErr", "RowUsr", "RowKey", "Ad", "Skl", "Grp", "Info", "IsRun", "IsRnkd" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class QryProxy : pb::IMessage<QryProxy> {
    private static readonly pb::MessageParser<QryProxy> _parser = new pb::MessageParser<QryProxy>(() => new QryProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QryProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RestLib.CRUDReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QryProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QryProxy(QryProxy other) : this() {
      query_ = other.query_;
      param_ = other.param_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QryProxy Clone() {
      return new QryProxy(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 1;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 2;
    private string param_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Param {
      get { return param_; }
      set {
        param_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QryProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QryProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Query != other.Query) return false;
      if (Param != other.Param) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Param.Length != 0) hash ^= Param.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      if (Param.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Param);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Param.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Param);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QryProxy other) {
      if (other == null) {
        return;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Param.Length != 0) {
        Param = other.Param;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
          case 18: {
            Param = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Competitions
  /// </summary>
  public sealed partial class CCProxy : pb::IMessage<CCProxy> {
    private static readonly pb::MessageParser<CCProxy> _parser = new pb::MessageParser<CCProxy>(() => new CCProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CCProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RestLib.CRUDReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCProxy(CCProxy other) : this() {
      rowSte_ = other.rowSte_;
      rowErr_ = other.rowErr_;
      rowUsr_ = other.rowUsr_;
      rowKey_ = other.rowKey_;
      ad_ = other.ad_;
      skl_ = other.skl_;
      grp_ = other.grp_;
      info_ = other.info_;
      isRun_ = other.isRun_;
      isRnkd_ = other.isRnkd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCProxy Clone() {
      return new CCProxy(this);
    }

    /// <summary>Field number for the "RowSte" field.</summary>
    public const int RowSteFieldNumber = 1;
    private string rowSte_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RowSte {
      get { return rowSte_; }
      set {
        rowSte_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RowErr" field.</summary>
    public const int RowErrFieldNumber = 2;
    private string rowErr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RowErr {
      get { return rowErr_; }
      set {
        rowErr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RowUsr" field.</summary>
    public const int RowUsrFieldNumber = 3;
    private ulong rowUsr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowUsr {
      get { return rowUsr_; }
      set {
        rowUsr_ = value;
      }
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 4;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "Ad" field.</summary>
    public const int AdFieldNumber = 5;
    private string ad_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ad {
      get { return ad_; }
      set {
        ad_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Skl" field.</summary>
    public const int SklFieldNumber = 6;
    private string skl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Skl {
      get { return skl_; }
      set {
        skl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Grp" field.</summary>
    public const int GrpFieldNumber = 7;
    private string grp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Grp {
      get { return grp_; }
      set {
        grp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 8;
    private string info_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isRun" field.</summary>
    public const int IsRunFieldNumber = 9;
    private bool isRun_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRun {
      get { return isRun_; }
      set {
        isRun_ = value;
      }
    }

    /// <summary>Field number for the "isRnkd" field.</summary>
    public const int IsRnkdFieldNumber = 10;
    private bool isRnkd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRnkd {
      get { return isRnkd_; }
      set {
        isRnkd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CCProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CCProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowSte != other.RowSte) return false;
      if (RowErr != other.RowErr) return false;
      if (RowUsr != other.RowUsr) return false;
      if (RowKey != other.RowKey) return false;
      if (Ad != other.Ad) return false;
      if (Skl != other.Skl) return false;
      if (Grp != other.Grp) return false;
      if (Info != other.Info) return false;
      if (IsRun != other.IsRun) return false;
      if (IsRnkd != other.IsRnkd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowSte.Length != 0) hash ^= RowSte.GetHashCode();
      if (RowErr.Length != 0) hash ^= RowErr.GetHashCode();
      if (RowUsr != 0UL) hash ^= RowUsr.GetHashCode();
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (Ad.Length != 0) hash ^= Ad.GetHashCode();
      if (Skl.Length != 0) hash ^= Skl.GetHashCode();
      if (Grp.Length != 0) hash ^= Grp.GetHashCode();
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (IsRun != false) hash ^= IsRun.GetHashCode();
      if (IsRnkd != false) hash ^= IsRnkd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowSte.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RowSte);
      }
      if (RowErr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RowErr);
      }
      if (RowUsr != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(RowUsr);
      }
      if (RowKey != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(RowKey);
      }
      if (Ad.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Ad);
      }
      if (Skl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Skl);
      }
      if (Grp.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Grp);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Info);
      }
      if (IsRun != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsRun);
      }
      if (IsRnkd != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsRnkd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowSte.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RowSte);
      }
      if (RowErr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RowErr);
      }
      if (RowUsr != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowUsr);
      }
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (Ad.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ad);
      }
      if (Skl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Skl);
      }
      if (Grp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Grp);
      }
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (IsRun != false) {
        size += 1 + 1;
      }
      if (IsRnkd != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CCProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowSte.Length != 0) {
        RowSte = other.RowSte;
      }
      if (other.RowErr.Length != 0) {
        RowErr = other.RowErr;
      }
      if (other.RowUsr != 0UL) {
        RowUsr = other.RowUsr;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.Ad.Length != 0) {
        Ad = other.Ad;
      }
      if (other.Skl.Length != 0) {
        Skl = other.Skl;
      }
      if (other.Grp.Length != 0) {
        Grp = other.Grp;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      if (other.IsRun != false) {
        IsRun = other.IsRun;
      }
      if (other.IsRnkd != false) {
        IsRnkd = other.IsRnkd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RowSte = input.ReadString();
            break;
          }
          case 18: {
            RowErr = input.ReadString();
            break;
          }
          case 24: {
            RowUsr = input.ReadUInt64();
            break;
          }
          case 32: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 42: {
            Ad = input.ReadString();
            break;
          }
          case 50: {
            Skl = input.ReadString();
            break;
          }
          case 58: {
            Grp = input.ReadString();
            break;
          }
          case 66: {
            Info = input.ReadString();
            break;
          }
          case 72: {
            IsRun = input.ReadBool();
            break;
          }
          case 80: {
            IsRnkd = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
